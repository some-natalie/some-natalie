name: 🔍 Malcontent differential analysis 🔍

on:
  pull_request:
    branches: ["main"]
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read

jobs:
  malcontent:
    name: Malware analysis using malcontent
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      # look at prior state
      - name: Checkout original code (HEAD^1)
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2
        with:
          fetch-depth: 2
          path: "prior-commit"
          persist-credentials: false
      - name: Actually roll back to the prior commit in that directory
        run: git checkout HEAD^1
        working-directory: prior-commit
      # build steps go here, in the prior-commit directory
      # alternatively, check out the prior release ... this is the "known good" before state

      # look at current commit
      - name: Checkout the current code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2
        with:
          fetch-depth: 1
          path: "current-commit"
          persist-credentials: false
      # build steps go here, in the current-commit directory

      - name: Analyze the files
        id: malcontent
        shell: bash
        run: |
          docker run --rm -v ${{ github.workspace }}:/tmp cgr.dev/chainguard/malcontent:latest --format=markdown diff /tmp/prior-commit /tmp/current-commit >> malcontent-results.md

      - name: Upload results
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          path: malcontent-results.md
          name: malcontent-results

  comment:
    name: Comment on the PR
    runs-on: ubuntu-latest
    needs: malcontent
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Download results
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: malcontent-results
          path: .
      - name: Comment on the PR
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const filePath = 'malcontent-results.md';

            if (!fs.existsSync(filePath)) {
              throw new Error(`File not found: ${filePath}`);
            }

            const fileContent = fs.readFileSync(filePath, 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fileContent,
            });
